#!/bin/bash
echo "HC: $0"

scenarioName=$1

#set the HOLOCHAIN_SYSTEM_BIN variable
. holochain.system.checkInstalled
#set the HOLOCHAIN_APPNAME and HOLOCHAIN_APPDIR variables
. holochain.app.findAppDir


export dockerBaseRun=" -e LOCAL_USER_ID=`id -u $USER` "
export LOCAL_USER_ID=`id -u $USER`

. $HOLOCHAIN_SYSTEM_BIN/app/createRuntime || exit 1

#creates a single script for each role in the testScenario, which is run by the respective container
$HOLOCHAIN_SYSTEM_BIN/app/testScenario.createClusterScripts $scenarioName

#begin log for this session
logFile=$HOLOCHAIN_APPLOGDIR/testScenario.$scenarioName.log
printf "########################################################################\n########################################################################\n########################################################################\n" | tee -a $logFile
echo "HC: testScenario $scenarioName started `date`" | tee -a $HOLOCHAIN_APPLOGDIR/cluster.log >> $logFile

set -x

####docker stuff
mkdir -p "$HOLOCHAIN_APPDIR/runtime/docker" > /dev/null
#need to hardlink the Dockerfile for docker security
ln $HOLOCHAIN_SYSTEM_BIN/../docker/app.docker/Dockerfile.BASE $HOLOCHAIN_APPDIR/runtime/docker/Dockerfile.BASE
#build the image to use as the base for the bs instance and hc instances

docker build --no-cache -f $HOLOCHAIN_APPDIR/runtime/docker/Dockerfile.BASE -t holochain.app.testing.$HOLOCHAIN_APPNAME $HOLOCHAIN_APPDIR


#TODO COMMENT AND MAKE WORK
#CONSTANTS
systemAppDockerDir="$HOLOCHAIN_SYSTEM_BIN/../docker/app.docker"
appAppDockerDir="$HOLOCHAIN_APPDIR/runtime/docker"

#appScriptDir="$HOLOCHAIN_APPDIR/runtime/Scripts"

#configureThis
systemDockerCompose="$systemAppDockerDir/docker-compose.with.bs.syncedHCMultiNode.yml"
#constants
appDockerCompose="$HOLOCHAIN_APPDIR/__tmp__.holochain.2134837348734.docker-compose.runCluster.yml"
rm $appDockerCompose &> /dev/null
ln $systemDockerCompose $appDockerCompose

#these depend on what your systemDockerCompose file requires
dockerfiles="app.seedService app.bsService app.syncedHCMultiNode app.syncedHCMultiNode.releaseSyncService app.externalStartEvent"
for dockerFileName in $dockerfiles
do
  cp "$systemAppDockerDir/Dockerfile.$dockerFileName" "$appAppDockerDir/Dockerfile.$dockerFileName"
done
sed -i'' s/{{FROM_DOCKERIMAGETAG}}/holochain.app.testing.$HOLOCHAIN_APPNAME/g $appAppDockerDir/Dockerfile.app.*

#give access to the scripts .. maybe, might not work ( symlinks )
ln -s $HOLOCHAIN_SYSTEM_BIN/../docker/app.docker $HOLOCHAIN_APPDIR/runtime/Scripts

#copy the whole repo into the runtime directory as the build context


echo "$HOLOCHAIN_SYSTEM_BIN/app/runCluster $scenarioName $systemDockerCompose $logFile"
$HOLOCHAIN_SYSTEM_BIN/app/runCluster $scenarioName $logFile

rm $appDockerCompose &
rm -r $HOLOCHAIN_APPDIR/runtime &

set +x
